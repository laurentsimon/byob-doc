# Copyright 2023 SLSA Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: "action example"
description: "build some artifacts."
inputs:
  artifact:
    description: "Artifact name to build"
    required: true
  content:
    description: "Artifact content to build"
    required: true
  username:
    description: "Username for a registry"
    default: "bot-account"
    required: false
  password:
    description: "Password for a registry"
    required: false
  token:
    description: "Token for a registry or GitHub"
    default: "${{ github.token }}"
    required: false
outputs:
  artifact:
    description: "Name of the artifact built"
    value: "${{ steps.build.outputs.artifact }}"
  status:
    description: "Status of the build"
    value: "${{ steps.build.outputs.status }}"
  artifact-name:
    description: "Name of the artifact uploaded"
    value: "${{ steps.rng.outputs.random }}-artifacts"
  artifact-sha256:
    description: "SHA256 of the uploaded artifacts."
    value: "${{ steps.upload.outputs.sha256 }}"

runs:
  using: "composite"
  steps:
    - name: Build example
      id: build
      shell: bash
      env:
        ARTIFACT: "${{ inputs.artifact }}"
        CONTENT: "${{ inputs.content }}"
        USERNAME: "${{ inputs.username }}"
        PASSWORD: "${{ inputs.password }}"
        TOKEN: "${{ inputs.token }}"
      run: |
        set -euo pipefail

        echo "${CONTENT}" > "${ARTIFACT}"
        echo "Username: ${USERNAME}"
        echo "Password: ${PASSWORD}"
        echo "Token: ${TOKEN}"

        # Set the outputs
        echo "artifact=${ARTIFACT}" >> "$GITHUB_OUTPUT"
        echo "status=success" >> "$GITHUB_OUTPUT"

    # We need a unique artifact name per workflow run, to avoid name collisions
    # when sharing artifacts, e.g. when multiple workflows run concurrently.
    - name: Create random value
      id: rng
      # WARNING:This is not cryptographically secure and will show in logs!
      uses: slsa-framework/slsa-github-generator/actions/delegator/random@main

    # Create the folder to share.
    # The folder is local, so need its name needs not be randomized.
    - name: Create folder to share
      shell: bash
      env:
        ARTIFACT: "${{ inputs.artifact }}"
      run: |
        set -euo pipefail

        mkdir artifacts
        mv "${ARTIFACT}" artifacts/

    # Share the artifacts folder, with a unique randomized name.
    - name: Share artifacts
      id: upload
      uses: slsa-framework/slsa-github-generator/actions/delegator/secure-upload-folder@main
      with:
        name: "${{ steps.rng.outputs.random }}-artifacts"
        path: artifacts

